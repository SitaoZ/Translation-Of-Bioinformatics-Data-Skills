第二章 建立和管理生物信息学项目

    正如一个组织良好的实验室使科学家的生活更轻松一样，一个组织良好、记录充分的项目也使生物信息学家的生活更轻松。
不管你在做什么样的项目，你的项目目录都应该以一种一致的、可理解的方式来安排。清晰的项目组织使您和合作者更容易准确
地确定所有内容的位置和内容。此外，当文件被组织和清楚地命名时，自动化任务要容易得多。例如，如果300个基因序列存储
在单独的FASTA文件中，并且这些文件被组织在一个目录中并且命名一致，那么用一个脚本来处理这些文件是很简单的。
    每个生物信息学项目开始于一个空的目录，所以本书从项目组织的一章开始是非常合适的。在本章中，一些组织你生信项目
目录的实际操作，和怎样用Markdown的方式记录你自己的工作。我们还将了解为什么项目目录组织不仅仅是为了保持整洁，而是
对于跨大量文件自动执行任务的方式至关重要。
    项目目录和目录结构
    创建一个好的生物信息项目结构是实现可复现的项目的基础。实际处理非常简单，布局一个项目只需要使用mkdir创建几个
目录，并使用touch创建空的自述文件（稍后我们将更深入地了解这些命令）。但这种简单的初步计划从长远来看是有回报的。
研究人员可以花数年的时间在这个目录中工作，其他研究者也会注意到一个好的项目组织重要性。虽然最终你会开发出一个适合
你的项目组织方案，但在本章中，我们将从我在工作中使用的方案（类似于Noble的方案）开始。
    项目中使用的所有文件和目录都应该位于具有明确名称。在一个项目的过程中，你会积累数据文件、笔记、脚本等等，如果
这些文件分散在你的硬盘上（或者更糟的是，在许多计算机的硬盘上），那么跟踪所有的东西都将是一场噩梦。更糟糕的是，这样
一个无序的项目会让你的研究变得几乎无法复制。
    将您的所有文件保存在一个目录中将大大简化您和你的合作者，以及促进可复制性（我们将讨论如何协作
在第5章中使用Git编写一个项目目录）。假设你在找寻玉米SNP。你的第一步是选择一个短的，合适的项目名
称并创建一些基本目录：
    $ mkdir zmays-snps
    $ cd zmays-snps
    $ mkdir data
    $ mkdir data/seqs scripts analysis
    $ ls -l
    total 0
    drwxr-xr-x 2 vinceb staff 68 Apr 15 01:10 analysis
    drwxr-xr-x 3 vinceb staff 102 Apr 15 01:10 data
    drwxr-xr-x 2 vinceb staff 68 Apr 15 01:10 scripts
    这是一个明智的项目布局方案。在这里，数据/包含所有原始和中间数据数据。正如我们将看到的，
在data/，数据处理步骤被视为独立的子目录。我将一般项目需要的脚本保存在scripts/目录中。
如果脚本包含许多文件（例如，多个Python模块），它们应该驻留在自己的文件中子目录。将脚本隔离
在自己的子目录中也会保留项目目录在开发这些脚本时保持整洁（当它们生成测试输出文件时）。
    生物信息学项目包含许多较小的分析，例如，分析原始序列的质量，比对输出，以及将产生的最终
数据一篇论文的图表。我喜欢将这些分析放在一个analysis/的目录中，因为它允许合作者无需深入研
究就可以看到这些高层次的分析到子项目目录中。
    什么是名称？
    命名计算机上的文件和目录比你想象的要重要。从可视化的操作系统转移到unix命令行上来，许多
人养成了在文件名和目录名中使用空格的坏习惯。这在基于Unix的环境中不合适，因为空格用于分隔命
令中的参数。例如，假设您从GUI创建一个名为raw sequences的目录（例如，通过OS X的Finder），
然后尝试使用以下命令删除它及其内容：
    $ rm -rf raw sequences
    如果幸运的话，会警告您raw和sequences“没有这样的文件或目录”。这是怎么回事？空间很重要：
您的shell将rm命令解释为“同时删除原始和序列文件”，而不是“删除一个名为raw sequences的文件或目录”。
    如果你不幸的有一个文件或目录原始或序列，此rm命令将删除它。有可能通过使用引号
（例如，rm-r“raw sequences”）来转义它，但是最好不要在文件名或目录名中使用空格。最好只使用字母、
数字、下划线和目录和文件名中的破折号。
    尽管Unix不需要文件扩展名，包括扩展名帮助指示每个文件的类型。例如，一个文件叫osativa-genes.fasta
很清楚这是一个序列文件以FASTA格式。相反，一个名为osativa genes的文件可以是一个基因模型的文件，关于
这些水稻基因在哪里的注释来自或序列数据。有疑问时，直截了当总是更好 在文件名、文档和正在编写代码。

    脚本和分析通常需要引用项目层次结构中的其他文件（如数据）

